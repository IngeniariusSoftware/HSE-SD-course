<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="LoginCheckTimer.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAKQBAACkAQAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAA9PFEAPDlLADw4SwBBR2EBQ0xtAUNLcAFETHEBRExyAURMcQFES3EBREtxAURL
        cQFETHIBQURmATs1TQE+PFcBQEFeAT02WQBAaDgAQXE6AD0gbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAD1BRAA9QkQBPEJDAz1DQwY8Q0MJPERDBj9JSwByrKoAXq27AU15hgNIbHMDRmVrBEZh
        aQRGYWoERmJqBEZnagRPe5MDYqrjA0l3ewEAAAAA////AGOl1wNEWGwHPURICTxBQwRQgrgAPEhMADxC
        RAAAAAAAAAAAAAAAAAAAAAAAPENDADxCQwo8Q0MePENDJTxERCM8QUJCOj08jzs9PY47Pj6OOz09jzs9
        PY87PT2POz09jzs9PY87PT2POz4+jzo8OoY4ODJ/PEFFgDs/QHw4Ni5oODQoSDYyIiU+SkkQQVFcEj1E
        SQg0KicAsv//ADxBRQA8QUUAAAAAAAAAAAA/PkECNV9mBDhLUAU+RUwJQEtaAD1ESptNa5P/UHKh+05v
        nP9Pb5z/Tm+c/05vm/9Ob5v/Tm+b/05vm/9Ob5v/Tm2Y/0hee/8+R1D/SmSH/0tpkf9DWXT8QE1e2zw/
        QIkyJhQhOjQfAD5ERwI8QkYCPUNJAD1CSAA8QUUAAAAAADxBRQBYAAAANlNaAD1IUAQ6OzkAOj09ckxp
        kf9Zis36WIfI+1iGxvtYhsf7WIbH+1iGx/tYhsf7WIfJ+1iHyPtYhsf8WYnM/FJ5rvxGV238bZjT/W+h
        5v1ciMb+TG6c/0RWbvg8Pj+LJw8ACwkAAAA6PDwDPUNJAD1CSAA8QUUAOzU4KTBESp9ANjh4YQAAElQA
        AAAzIAsHPEJGjEBLWOZOb5v/V4XE/lWBvP9Wgb7/VoG9/1aCv/9UfbX/VH63/1aCv/9VgLv/WIjJ/05x
        oP9MWWn+ZYGm/nGWyP9zo+b7XIzO+ktrlv9ASlbWMioaKS8gCAA6PT0DPEJGADxBRQBMTlK2TsbU/wy2
        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
        T/+AAE//IAEv/4AAX/+QAn//oAF//9My//8=
</value>
  </data>
</root>